buildscript {
}

apply plugin: 'android'

repositories {
    mavenCentral()
}

configurations {
    apt
}

ext.androidAnnotationsVersion = '2.7.+'

dependencies {
    apt "com.googlecode.androidannotations:androidannotations:${androidAnnotationsVersion}"

    compile 'com.android.support:support-v4:13.0.+'
    compile 'com.android.support:appcompat-v7:18.0.+'
    compile files('libs/BugFreak-1.1.5.jar')

    compile project(':omnicommon')
    compile project(':omniapi')
    compile project(':omnimessaging')
    compile project(':clipboardprovider')

    instrumentTestCompile 'org.objenesis:objenesis:1.3'
    instrumentTestCompile 'com.google.dexmaker:dexmaker-mockito:1.0'
    instrumentTestCompile 'org.mockito:mockito-core:1.9.5'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 19
    }

    signingConfigs {
        release {
            storeFile file("../key.store")
            storePassword "ArtLine123"
            keyAlias "omnipaste"
            keyPassword "ArtLine123"
        }
    }

    buildTypes {
        staging {
            signingConfig signingConfigs.release
        }

        release {
            signingConfig signingConfigs.release
        }
    }
}

android.applicationVariants.all { variant ->
    def aptOutputDir = project.file(new File(project.buildDir, "source/apt"))
    def aptOutput = new File(aptOutputDir, variant.dirName)
    def sourceSet = new File(variant.dirName).getName()

    android.sourceSets[sourceSet].java.srcDirs += aptOutput.getPath()

    variant.javaCompile.options.compilerArgs += [
            '-processorpath', configurations.apt.getAsPath(),
            '-AandroidManifestFile=' + variant.processResources.manifestFile,
            '-s', aptOutput
    ]

    variant.javaCompile.source = variant.javaCompile.source.filter { p ->
        return !p.getPath().startsWith(aptOutputDir.getPath())
    }

    variant.javaCompile.doFirst {
        aptOutput.mkdirs()
    }
}

